plugins {
	id 'java' apply true
	id 'io.spring.dependency-management' version "${springDMVersion}" apply true
	id 'org.springframework.boot' version "${springBootVersion}" apply true
}

repositories {
	jcenter()
}
group = 'ru.lighthouse'
version = "${projectVersion}"

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.apache.commons:commons-lang3:${apacheCommonsLangVersion}"
	implementation "org.flywaydb:flyway-core:${flywayVersion}"
	implementation "ma.glasnost.orika:orika-core:${orikaVersion}"
	implementation "io.jsonwebtoken:jjwt:${jjwtversion}"
	implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
	implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"

	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	annotationProcessor "org.projectlombok:lombok"
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	runtimeOnly "org.postgresql:postgresql:${postgreVersion}"

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

java {
	sourceCompatibility = JavaVersion.VERSION_14
	targetCompatibility = JavaVersion.VERSION_14
}

sourceSets {
	main {
		java {
			srcDirs= ["src/main/java"]
		}
		resources {
			srcDirs= ["src/main/resources"]
		}
	}
	test {
		java {
			srcDirs= ["src/test/java"]
		}
		resources {
			srcDirs= ["src/test/resources"]
		}
	}
}

springBoot {
	buildInfo()
}

test {
	useJUnitPlatform()
}

clean.doLast {
	file('logs').deleteDir()
}