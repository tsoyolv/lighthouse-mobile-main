#!/usr/bin/env sh

ENV=${1:-gradle}
ENV2=${2:-settings}

function gradle_properties {
    grep "${1}" ${ENV}.properties|cut -d'=' -f2
}

function settings_gradle {
    grep "${2}" ${ENV2}.gradle|cut -d'=' -f2 | sed 's/ //g' | sed 's/^.//;s/.$//'
}

PROJ_NAME=$(settings_gradle 'rootProject.name')
PROJ_VERSION=$(gradle_properties 'lProjectVersion')

printf '============================================ ATTENTION! YOU HAVE TO RUN COMMAND FROM ROOT DIRECTORY ==============================================\n\n'

printf '============================================ Project versions: '
printf ${PROJ_NAME}
printf ' '
printf ${PROJ_VERSION}
printf " ============================================\n\n"

# Read Login
printf "ENTER Docker login: "
read registryLogin
printf "Login entered\n\n"
printf '============================================ Docker HUB registry Login: '
printf $registryLogin
printf " ============================================\n\n"

# Read Password
printf "ENTER Docker password: "
read -s registryPassword
echo
printf "Password entered\n\n"

docker logout
docker login --username $registryLogin --password $registryPassword
printf '============================================ Docker HUB registry login end ==============================================\n\n'

printf '============================================ Create docker image start ==============================================\n\n'
./gradlew clean
./gradlew bootJar
mkdir -p build/dependency && (cd build/dependency; jar -xf ../libs/*.jar)

docker build -f docker/Dockerfile -t ${PROJ_NAME}:${PROJ_VERSION} .
docker tag ${PROJ_NAME}:${PROJ_VERSION} $registryLogin/${PROJ_NAME}:${PROJ_VERSION}
printf '============================================ Create docker image end ==============================================\n\n'

printf '============================================ Docker push start ==============================================\n\n'
docker push $registryLogin/${PROJ_NAME}:${PROJ_VERSION}

docker tag ${PROJ_NAME}:${PROJ_VERSION} $registryLogin/${PROJ_NAME}:latest
docker push $registryLogin/${PROJ_NAME}:latest
printf '============================================ Docker push end ==============================================\n\n'

printf '============================================ Delete image from local machine start ==============================================\n\n'
docker image rm $registryLogin/${PROJ_NAME}:${PROJ_VERSION}
docker image rm $registryLogin/${PROJ_NAME}:latest
printf '============================================ Delete image from local machine end ==============================================\n\n'